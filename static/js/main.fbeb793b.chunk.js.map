{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","children","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","event","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCHbC,G,MAAW,SAAAR,GAGpB,OAFAS,QAAQC,IAAIV,GACZS,QAAQC,IAAIV,EAAMW,UACX,qBAAKV,UAAU,YAAf,SACFD,EAAMY,SAASC,KAAI,SAAAT,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLlBS,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBAAOC,KAAK,SACLhB,UAAU,SACVc,YAAaA,EACbG,SAAUF,MC6BNG,E,kDA9BX,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IACDoB,MAAQ,CACTR,SAAU,GACVS,YAAa,IAJF,E,gEAQE,IAAD,OAChBC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,+BAGtC,IAAD,SAC2BE,KAAKR,MAA9BR,EADF,EACEA,SAAUS,EADZ,EACYA,YACXQ,EAAmBjB,EAASkB,QAAO,SAAA1B,GAAO,OAC5CA,EAAQE,KAAKyB,cAAcC,SAASX,EAAYU,kBAEpD,OACI,sBAAK9B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAWc,YAAY,gBACZC,aAAc,SAAAiB,GAAK,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAMC,OAAOC,WAC3E,cAAC,EAAD,CAAUvB,SAAUiB,W,GAzBlBO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.fbeb793b.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../card/card.style.css';\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)\r\n","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => {\r\n    console.log(props);\r\n    console.log(props.children);\r\n    return <div className='card-list'>\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n    </div>;\r\n}\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <input type='search'\r\n           className='search'\r\n           placeholder={placeholder}\r\n           onChange={handleChange}/>\r\n)\r\n","import './App.css';\r\n\r\nimport React, {Component} from 'react';\r\nimport {CardList} from './components/card-list/card-list.component';\r\nimport {SearchBox} from './components/search-box/search-box.component';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            monsters: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(response => response.json())\r\n            .then(users => this.setState({monsters: users}));\r\n    }\r\n\r\n    render() {\r\n        const {monsters, searchField} = this.state;\r\n        const filteredMonsters = monsters.filter(monster =>\r\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n        );\r\n        return (\r\n            <div className=\"App\">\r\n                <h1>Monsters Rolodex</h1>\r\n                <SearchBox placeholder='Jetzt suchen!'\r\n                           handleChange={event => this.setState({searchField: event.target.value})}/>\r\n                <CardList monsters={filteredMonsters}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}